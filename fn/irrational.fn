// number bigint rational irrational
// left right
// + - * / % ** cmp
let
    fn test {
        (1.0) { 0.0 }
        (n) { 1 + n }
    }
    bi = 642086031413279956691053384794363;
in
    print(1 + 1);
    print(1 + bi);
    print(1 + 1/2);
    print(1 + 0.5);

    print(bi + 1);
    print(bi + bi);
    print(bi + 1/2);
    print(bi + 0.5);

    print(1/2 + 1);
    print(1/2 + bi);
    print(1/2 + 1/2);
    print(1/2 + 0.5);

    print(0.5 + 1);
    print(0.5 + bi);
    print(0.5 + 1/2);
    print(0.5 + 0.5);
    print(1 * 1);
    print(1 * bi);
    print(1 * 1/2);
    print(1 * 0.5);
    print(bi * 1);
    print(bi * bi);
    print(bi * 1/2);
    print(bi * 0.5);
    print(1/2 * 1);
    print(1/2 * bi);
    print(1/2 * 1/2);
    print(1/2 * 0.5);
    print(0.5 * 1);
    print(0.5 * bi);
    print(0.5 * 1/2);
    print(0.5 * 0.5);
    print(1 / 1);
    print(1 / bi);
    print(1 / (1/2));
    print(1 / 0.5);
    print(bi / 1);
    print(bi / bi);
    print(bi / (1/2));
    print(bi / 0.5);
    print((1/2) / 1);
    print((1/2) / bi);
    print((1/2) / (1/2));
    print((1/2) / 0.5);
    print(0.5 / 1);
    print(0.5 / bi);
    print(0.5 / (1/2));
    print(0.5 / 0.5);
    print(1 ** 1);
    // print(1 ** bi);
    print(1 ** (1/2));
    print(1 ** 0.5);
    print(bi ** 1);
    // print(bi ** bi);
    print(bi ** (1/2));
    print(bi ** 0.5);
    print((1/2) ** 1);
    // print((1/2) ** bi);
    print((1/2) ** (1/2));
    print((1/2) ** 0.5);
    print(0.5 ** 1);
    print(0.5 ** bi);
    print(0.5 ** (1/2));
    print(0.5 ** 0.5);
    // print(sin(0.5));
    print(test(12));
