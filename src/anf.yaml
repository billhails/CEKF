#
# CEKF - VM supporting amb
# Copyright (C) 2022-2024  Bill Hails
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

config:
    name: anf
    description: A-Normal Form (ANF) structures to be converted to bytecode.
    parserInfo: true
    limited_includes:
    - bigint.h
    - ast_helper.h
    - tc.h
    - tc_debug.h


structs:
    CTEnv:
        meta:
            brief: ANF Compile Time Environment
            description: lookup for the run-time locations of variables.
        data:
            isLocal: bool
            isNamespace: bool = false
            nbindings: int = 0
            nsEnvs: CTEnvArray = NULL
            table: CTIntTable
            next: CTEnv

    AexpLam:
        meta:
            brief: ANF Aexp Lambda
            description: A lambda expression in ANF.
        data:
            nargs: int
            letRecOffset: int
            args: AexpVarList
            exp: Exp

    AexpVarList:
        meta:
            brief: ANF Aexp Variable List
            description: A list of argument variables for a lambda.
        data:
            var: HashSymbol
            next: AexpVarList

    AexpAnnotatedVar:
        meta:
            brief: ANF Annotated Variable
            description: >-
                A variable annotated with its location in the environment.
        data:
            type: AexpAnnotatedVarType
            frame: int
            offset: int
            var: HashSymbol

    AexpPrimApp:
        meta:
            brief: ANF Aexp Primitive Application
            description: A primitive operation applied to two A-expressions.
        data:
            type: AexpPrimOp
            exp1: Aexp
            exp2: Aexp

    AexpList:
        meta:
            brief: ANF Aexp List
            description: A list of A-expressions.
        data:
            exp: Aexp
            next: AexpList

    AexpIntList:
        meta:
            brief: ANF Aexp Integer List
            description: A list of integers used in ANF.
        data:
            integer: int
            next: AexpIntList

    AexpMakeVec:
        meta:
            brief: ANF Aexp Make Vector
            description: A vector construction operation in ANF.
        data:
            nargs: int
            args: AexpList

    AexpNamespace:
        meta:
            brief: ANF Aexp Namespace
            description: >-
                A namespace in ANF, containing the body of the namespace.
        data:
            nbindings: int = 0
            body: Exp

    AexpNamespaces:
        meta:
            brief: ANF Aexp Namespaces
            description: An array of namespaces in ANF.
        data:
            namespaces: AexpNamespaceArray
            body: Exp

    CexpApply:
        meta:
            brief: ANF Cexp Apply
            description: A application of a function in ANF.
        data:
            function: Aexp
            nargs: int
            args: AexpList

    CexpIf:
        meta:
            brief: ANF Cexp If
            description: A conditional expression in ANF.
        data:
            condition: Aexp
            consequent: Exp
            alternative: Exp

    CexpCond:
        meta:
            brief: ANF Cexp Conditional
            description: A conditional expression with multiple cases in ANF.
        data:
            condition: Aexp
            cases: CexpCondCases

    CexpIntCondCases:
        meta:
            brief: ANF Cexp Integer Conditional Cases
            description: >-
                Sub-class of CexpCondCases for big integer
                dispatch tables in ANF.
        data:
            option: MaybeBigInt
            body: Exp
            next: CexpIntCondCases

    CexpCharCondCases:
        meta:
            brief: ANF Cexp Character Conditional Cases
            description: >-
                Sub-class of CexpCondCases for UTF-32 character
                dispatch tables in ANF.
        data:
            option: character
            body: Exp
            next: CexpCharCondCases

    CexpMatch:
        meta:
            brief: ANF Cexp Match
            description: A match expression derived from a TPMC switch in ANF.
        data:
            condition: Aexp
            clauses: MatchList

    CexpLetRec:
        meta:
            brief: ANF Cexp Let Rec
            description: A let-rec (recursive let) expression in ANF.
        data:
            nbindings: int
            bindings: LetRecBindings
            body: Exp

    CexpAmb:
        meta:
            brief: ANF Cexp Amb
            description: An amb operation in ANF.
        data:
            exp1: Exp
            exp2: Exp

    CexpCut:
        meta:
            brief: ANF Cexp Cut
            description: A cut operation in ANF.
        data:
            exp: Exp

    ExpLet:
        data:
            var: HashSymbol
            val: Exp
            body: Exp

    ExpLookup:
        data:
            namespace: index
            annotatedVar: AexpAnnotatedVar = NULL
            body: Exp

    MatchList:
        meta:
            brief: ANF Match List
            description: A list of expressions each with multiple match cases
        data:
            matches: AexpIntList
            body: Exp
            next: MatchList

    LetRecBindings:
        meta:
            brief: ANF Let Rec Bindings
            description: A list of let-rec (recursive let) bindings in ANF.
        data:
            var: HashSymbol
            val: Aexp
            next: LetRecBindings

unions:
    CexpCondCases:
        meta:
            brief: ANF Cexp Conditional Cases
            description: A union of conditional cases for CexpCond, either character or integer.
        data:
            charCases: CexpCharCondCases
            intCases: CexpIntCondCases

    Aexp:
        meta:
            brief: ANF Aexp
            description: A union of all A-expressions (atomic expressions) in ANF.
        data:
            lam: AexpLam
            var: HashSymbol
            annotatedVar: AexpAnnotatedVar
            biginteger: MaybeBigInt
            littleinteger: int
            character: character
            prim: AexpPrimApp
            makeVec: AexpMakeVec
            namespaces: AexpNamespaces

    Cexp:
        meta:
            brief: ANF Cexp
            description: A union of all C-expressions (complex expressions) in ANF.
        data:
            back: void_ptr
            error: void_ptr
            apply: CexpApply
            iff: CexpIf
            cond: CexpCond
            callCC: Aexp
            letRec: CexpLetRec
            amb: CexpAmb
            cut: CexpCut
            match: CexpMatch

    Exp:
        meta:
            brief: ANF Exp
            description: A union of all expression types (atomic or complex) in ANF.
        data:
            env: void_ptr
            done: void_ptr
            aexp: Aexp
            cexp: Cexp
            let: ExpLet
            lookup: ExpLookup

enums:
    AexpAnnotatedVarType:
        meta:
            brief: ANF Aexp Annotated Variable Type
            description: The type (i.e. location) of an annotated variable in ANF.
        data:
        - STACK
        - ENV

    AexpPrimOp:
        meta:
            brief: ANF Aexp Primitive Operation types.
            description: The type of all primitive operations in ANF.
        data:
        - ADD
        - SUB
        - MUL
        - DIV
        - POW
        - EQ
        - NE
        - LT
        - GT
        - LE
        - GE
        - VEC
        - MOD
        - CMP

hashes:
    AnfSymbolTable:
        meta:
            brief: ANF Symbol Table
            description: A hash table set of symbols used in ANF.
        data: {}

    CTIntTable:
        meta:
            brief: ANF Compile Time Integer Table
            description: A hash table of integers used in ANF.
        data:
            entries: int

arrays:
    AexpNamespaceArray:
        meta:
            brief: ANF Aexp Namespace Array
            description: An array of namespaces in ANF. 
        data:
            entries: AexpNamespace

    CTEnvArray:
        meta:
            brief: ANF Compile Time Environment Array
            description: An array of compile time environments in ANF.
        data:
            entries: CTEnv

primitives: !include primitives.yaml

external:
    TcType:
        meta:
            brief: external type from the type-checker
            description: A type-checker type referenced by the ANF code.
        data:
            cname: "struct TcType *"
            printFn: printTcType
            markFn: markTcType
            valued: true
