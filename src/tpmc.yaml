#
# CEKF - VM supporting amb
# Copyright (C) 2022-2023  Bill Hails
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

config:
    name: tpmc
    includes:
    - lambda.h

description: Term Pattern Matching Compiler types

structs:
    TpmcMatchRules:
        rules: TpmcMatchRuleArray
        rootVariables: TpmcVariableArray

    TpmcMatchRule:
        action: TpmcState
        patterns: TpmcPatternArray

    TpmcComparisonPattern:
        previous: TpmcPattern
        current: TpmcPattern

    TpmcAssignmentPattern:
        name: HashSymbol
        value: TpmcPattern

    TpmcConstructorPattern:
        tag: HashSymbol
        info: LamTypeConstructorInfo
        components: TpmcPatternArray

    TpmcPattern:
        path: HashSymbol=NULL
        pattern: TpmcPatternValue

    TpmcTestState:
        path: HashSymbol
        arcs: TpmcArcArray

    TpmcFinalState:
        action: LamExp

    TpmcState:
        refcount: int=0
        stamp: int
        freeVariables: HashTable=NULL
        state: TpmcStateValue

    TpmcArc:
        state: TpmcState
        test: TpmcPattern

    TpmcStateArrayContainer:
        array: TpmcStateArray

arrays:
    TpmcMatchRuleArray:
        dimension: 1
        entries: TpmcMatchRule

    TpmcVariableArray:
        dimension: 1
        entries: HashSymbol

    TpmcPatternArray:
        dimension: 1
        entries: TpmcPattern

    TpmcStateArray:
        dimension: 1
        entries: TpmcState

    TpmcArcArray:
        dimension: 1
        entries: TpmcArc

    TpmcIntArray:
        dimension: 1
        entries: int

    TpmcMatrix:
        dimension: 2
        entries: TpmcPattern

unions:
    TpmcPatternValue:
        var: HashSymbol
        comparison: TpmcComparisonPattern
        assignment: TpmcAssignmentPattern
        wildcard: void_ptr
        character: char
        integer: int
        constructor: TpmcConstructorPattern

    TpmcStateValue:
        test: TpmcTestState
        final: TpmcFinalState
        error: void_ptr

enums: {}

primitives:
    HashTable:
        cname: "HashTable *"
        printFn: "printHashTable"
        markFn: "markHashTable"
        valued: true

    HashSymbol:
        cname: "HashSymbol *"
        printFn: "printAstSymbol"
        markFn: "markHashSymbol"
        valued: true

    LamExp:
        cname: "LamExp *"
        printFn: "printLamExp"
        markFn: "markLamExp"
        valued: true

    LamTypeConstructorInfo:
        cname: "LamTypeConstructorInfo *"
        printFn: "printLamTypeConstructorInfo"
        markFn: "markLamTypeConstructorInfo"
        valued: true

    int:
        cname: "int"
        printf: "%d"
        valued: true

    char:
        cname: "char"
        printf: "'%c'"
        valued: true

    void_ptr:
        cname: "void *"
        printf: "%p"
        valued: false
